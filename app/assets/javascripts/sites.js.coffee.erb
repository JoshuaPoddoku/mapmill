# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/


$(document).ready ->
  $uploadList = $('#upload-list')
  $url = $("#s3-data").data("url")
  file_list = []

  # trigger file upload browser on Browse click
  $('#browse').click () ->
    $('#fileupload').click()

  #$('#upload_selected').click ->
  #  #selected_files = $('.thumbnail.selected_img img')
  #  #selected_files.each( (i, elem) ->
  #  $(file_list).each( (i, elem) ->
  #    #elem_array = []
  #    #elem_array[0] = elem.src
  #    #blob = new Blob(elem_array)
  #    blob_array = []
  #    blob_array[0] = elem 
  #    jqXHR = $('#fileupload').fileupload('send', {files: blob_array })
  #      .success( (result, textStatus, jqXHR) ->
  #          $('#upload-status').text("Success")
  #      )
  #      .error( (jqXHR, textStatus, errorThrown) ->
  #          $('#upload-status').text("Error")
  #      )
  #      .complete( (result, textStatus, jqXHR) -> 
  #          $('#upload-status').text("Complete")
  #      )
  #  )
  #  #  filesList.push(f.src)  

  
  formatFileSize = (bytes) ->
    return ""  if typeof bytes isnt "number"
    return (bytes / 1000000000).toFixed(2) + " GB"  if bytes >= 1000000000
    return (bytes / 1000000).toFixed(2) + " MB"  if bytes >= 1000000
    (bytes / 1000).toFixed(2) + " KB"


  $("#fileupload").fileupload({
    xhrFields: {withCredentials: true},
    url: $url,
    type: 'POST',
    autoUpload: false,
    acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
    maxFileSize: 9000000,
    dataType: 'xml',
    formData: $("#s3-data").data("fields"), 
    paramName: 'file',
    dropZone: $('#upload-area'),
    add: (e, data) ->
      for file in data.files
        #console.log file
        reader = new FileReader()
        reader.onloadend = ->
          tpl = $('<div class="col-xs-6 col-md-3"><div class="thumbnail"><div class="knob-progress working"><input type="text" value="0" data-width="100" data-height="100"'+ ' data-fgColor="#0788a5" data-readOnly="1" data-bgColor="#3e4043" /></div><img src="" alt="Upload thumbnail"/><div class="caption"></div><span></span></div></div>')
          # add image source
          tpl.find("img").get(0).src = reader.result 
          # add click handler to thumbnails so they can be selected
          tpl.find('.thumbnail').click ->
            if $(this).hasClass 'selected_img'
              $(this).removeClass 'selected_img'
              idx = file_list.indexOf(file)
              if idx > -1
                file_list.splice(idx, 1) 
            else
              $(this).addClass 'selected_img'
              file_list.push(file)
              
            return
          # Append the file name and file size
          tpl.find(".caption").text(file.name).append "<i><br/>" + formatFileSize(file.size) + "</i>"
          # Add the HTML to the UL element
          data.context = tpl.appendTo($uploadList)
          # Initialize the knob plugin
          tpl.find("input").knob()
          # Listen for clicks on the cancel icon
          #tpl.find("span").click ->
          #  jqXHR.abort()  if tpl.hasClass("working")
          #  tpl.fadeOut ->
          #    tpl.remove()

          #Automatically upload the file once it is added to the queue
          #jqXHR = data.submit()
        reader.readAsDataURL file
        $('#upload_selected').on('click', () ->
          data.submit()
        )

    progress: (e, data) ->
        # Calculate the completion percentage of the upload
        progress = parseInt(data.loaded / data.total * 100, 10)
        #$('#upload-status').text(progress)
        # Update the hidden input field and trigger a change
        # so that the jQuery knob plugin knows to update the dial
        data.context.find(".knob-progress").show()
        data.context.find("input").val(progress).change()
        data.context.removeClass "working"  if progress is 100

   progressall: (e, data) -> 
      progress = parseInt(data.loaded / data.total * 100, 10)
      $(".progress-bar").css('width', progress + '%')


    fail: (e, data) ->
        #$(data).addClass "error"
        $('.alert').show()
        #$('.alert').alert()

    uploadTemplate: (o) ->
        rows = $()
        $.each o.files, (index, file) ->
          row = $("<tr class=\"template-upload fade\">" + "<td><span class=\"preview\"></span></td>" + "<td><p class=\"name\"></p>" + "<div class=\"error\"></div>" + "</td>" + "<td><p class=\"size\"></p>" + "<div class=\"progress\"></div>" + "</td>" + "<td>" + ((if not index and not o.options.autoUpload then "<button class=\"start\" disabled>Start</button>" else "")) + ((if not index then "<button class=\"cancel\">Cancel</button>" else "")) + "</td>" + "</tr>")
          row.find(".name").text file.name
          row.find(".size").text o.formatFileSize(file.size)
          row.find(".error").text file.error  if file.error
          rows = rows.add(row)
          return

        rows

      downloadTemplate: (o) ->
        rows = $()
        $.each o.files, (index, file) ->
          row = $("<tr class=\"template-download fade\">" + "<td><span class=\"preview\"></span></td>" + "<td><p class=\"name\"></p>" + ((if file.error then "<div class=\"error\"></div>" else "")) + "</td>" + "<td><span class=\"size\"></span></td>" + "<td class=\"delete\"><button>Delete</button></td>" + "</tr>")
          row.find(".size").text o.formatFileSize(file.size)
          if file.error
            row.find(".name").text file.name
            row.find(".error").text file.error
          else
            row.find(".name").append $("<a></a>").text(file.name)
            row.find(".preview").append $("<a></a>").append($("<img>").prop("src", file.thumbnailUrl))  if file.thumbnailUrl
            row.find("a").attr("data-gallery", "").prop "href", file.url
            row.find(".delete button").attr("data-type", file.delete_type).attr "data-url", file.delete_url
          rows = rows.add(row)
          return

        rows
  })

  #$('#fileupload').fileupload(
  #      'option',
  #      'redirect',
  #      window.location.href.replace(
  #          /\/[^\/]*$/,
  #          '/cors/result.html?%s'
  #      )
  #)

  $(document).on "drop dragover", (e) ->
      e.preventDefault()
